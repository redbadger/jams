name: Build & Deploy

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Cache node modules and next folder
      - name: üì¨ Caching
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Add Firebase secret
        run: |
          mkdir secrets
          echo $FIREBASE_ADMIN_CREDENTIALS | base64 -d > secrets/firebase_admin_credentials.json
        env:
          FIREBASE_ADMIN_CREDENTIALS: ${{ secrets.FIREBASE_ADMIN_CREDENTIALS }}

      - name: üß∞ Install dependencies
        run: |
          npm install -g yarn
          yarn install

      # - name: üßπ Run lint
      #   run: npm run lint

      - name: üêõ Run tests
        run: yarn test

      - name: üõ†   Build project
        id: build-netlify
        run: |
          netlify build
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      - name: üåç Preview deploy to Netlify
        if: ${{ github.event_name == 'pull_request' }}
        id: preview-deploy-netlify
        run: |
          netlify deploy -m '${{ github.head_ref }}' --alias '${{ github.head_ref }}'
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      - name: üöÄ Production deploy to Netlify
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        id: deploy-netlify
        run: |
          netlify deploy -m 'Production deploy - ${{ github.sha }}' --prod
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
